name: Reusable Build and Push to ECR

on:
  workflow_call:
    inputs:
      caller_repo:
        required: true
        type: string
      # aws_region:
      #   required: true
      #   type: string
      ecr_repository:
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # permissions:
    #   contents: read
    #   id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     role-to-assume: arn:aws:iam::790862075478:role/githubactionsrole
      #     aws-region: us-east-1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ inputs.caller_repo }}
          docker build -t ${{ inputs.ecr_repository }} .
        #  docker build -t ${{ inputs.ecr_repository }}:$IMAGE_TAG .

      # - name: Push Docker image to ECR
      #   run: |
      #     IMAGE_TAG=${{ inputs.caller_repo }}
      #     docker tag ${{ inputs.ecr_repository }}:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_repository }}:$IMAGE_TAG
      #     docker push ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_repository }}:$IMAGE_TAG

      - name: Print caller repository URL
        run: |
          echo "Caller Repository URL: ${{ inputs.caller_repo }}"
